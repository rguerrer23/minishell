Esta es la guia en la que nos estamos basando para el proyecto:

    https://github.com/madebypixel02/minishell

Realmente lo que vamos a crear en este proyecto es un "interprete" de comandos que
se comunicara con el kernel y nos permitira ejecutar los comandos de diversos tipos.

OBJETIVOS:

    - Mostrar una entrada mientras se espera un comando.
    - Tener un historial funcional.
    - buscar y ejecutar comandos/ordenes.
    - Evitar usar mas de una variable global para evitar problemas de señales y estructuras.

En un principio nos vamos a repartir las tareas de la siguiente manera:
    
    - jmartos-: lexer, expander, parser
    - rguerrer: executor

TO_DO (jmartos-):

    1º- He creado una funcion en el libft para copiar matrices bidireccionales (ft_matrixdup.c).







***************************** JMARTOS- Y RGUERRER ******************************
INDICE:
    MINISHELL

    MANEJAR ERRORES DE USUARIO
    SIGNAL

    LEXER:
    - SEPARAR EL STRING ENTRE ESPACIOS Y COMILLAS (SIMPLES Y DOBLES)
    - EXPANDER???
    - SEPARAR ENTRE SIGNOS <, |, >.... SOLO SI ESTAS FUERA DE COMILLAS

    PARSER:
    - CAMBIAR LA STRING DE UNA FORMA QUE PUEDA UTILIZAR EL EXECUTOR.
    - SEPARAR EL ARGUMENTO PASADO POR PARAMETROS EN LA ENTRADA ESTANDAR Y
    GUARDARLA EN LASTRUCTURA DE FORMA ADECUADA PARA PODER SER USADA/INTERPRETADA.

    EXECUTOR:
    - IMPLEMENTAR IGUAL QUE EL PIPEX (AÑADIR HEREDOC)
    - BUILTINS
*********************************************************************************